<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caden.campcircle.mapper.PrivateMessageMapper">

    <resultMap id="BaseResultMap" type="com.caden.campcircle.model.entity.PrivateMessage">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="fromUserId" column="from_user_id" jdbcType="BIGINT"/>
        <result property="toUserId" column="to_user_id" jdbcType="BIGINT"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="messageType" column="message_type" jdbcType="TINYINT"/>
        <result property="pictureUrl" column="picture_url" jdbcType="VARCHAR"/>
        <result property="isRead" column="is_read" jdbcType="TINYINT"/>
        <result property="isRecalled" column="is_recalled" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="ChatListResultMap" type="com.caden.campcircle.model.vo.LastMessage">
        <result property="content" column="content" jdbcType="BIGINT"/>
        <result property="messageType" column="messageType" jdbcType="VARCHAR"/>
        <result property="isRecalled" column="isRecalled" jdbcType="TINYINT"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, from_user_id, to_user_id, content, message_type, picture_url, is_read, is_recalled, create_time, update_time
    </sql>

    <!-- 获取用户的聊天列表 -->


    <!-- 获取两个用户之间的未读消息数量 -->
    <select id="getUnreadCountByUser" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM private_message
        WHERE fromUserId = #{fromUserId}
          AND toUserId = #{toUserId}
          AND isRead = 0
    </select>
    <select id="getChatUserIdList" resultType="java.lang.Long" parameterType="java.lang.Long">
        SELECT DISTINCT toUserId as chat_user_id
        FROM private_message
        WHERE fromUserId = #{userId}

        UNION

        SELECT DISTINCT fromUserId as chat_user_id
        FROM private_message
        WHERE toUserId = #{userId}
    </select>
    <select id="getLatestMessage" resultType="com.caden.campcircle.model.vo.LastMessage">
        SELECT content, messageType,isRecalled, createTime
        FROM private_message
        WHERE (fromUserId = #{currentUserId} AND toUserId = #{chatUserId})
           OR (fromUserId = #{chatUserId} AND toUserId = #{currentUserId})
        ORDER BY createTime DESC
        LIMIT 1
    </select>
    <select id="getAllUnreadCount" resultType="java.lang.Long" parameterType="java.lang.Long">
        SELECT COUNT(*)
        FROM private_message
        WHERE toUserId = #{userId}
          AND isRead = 0
    </select>
    <!-- 标记消息为已读 -->
    <update id="markAsRead">
        UPDATE private_message
        SET isRead = 1, updateTime = NOW()
        WHERE fromUserId = #{fromUserId}
          AND toUserId = #{toUserId}
          AND isRead = 0
          AND isRecalled = 0
    </update>

</mapper>
